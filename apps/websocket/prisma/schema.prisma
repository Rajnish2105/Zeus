// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
id   Int @id @default(autoincrement())
name String
email String @unique
cellPh String @unique
password String?
roles Role[] @relation("User Roles")
owner Gym[] @relation("Gym Owner")
member Gym[] @relation("Gym member")
memberships UserMembership[] // Explicit Many to Many Relation
attendance Attendance[] @relation("UserAttendance")
provider Providers
}

model Role {
  id   String @id @default(uuid())
  roleName Roles
  users User[] @relation("User Roles")
}

model Gym {
id String @id @default(uuid())
name String
address String
owner User @relation("Gym Owner",fields: [ownerId], references: [id])
ownerId Int 
memberships Membership[]
members User[]  @relation("Gym member")
attendance  Attendance[]
phoneNumber String
userMemberships UserMembership[]

}

model OTP {
  id        Int      @id @default(autoincrement())
  email     String
  otp       String
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Membership {
  id String @id @default(uuid())
  price String
  duration Int
  description String[]
  gym Gym @relation(fields: [gymId], references: [id])
  gymId String
  users UserMembership[] 
  color String
  
}

model UserMembership {
  userId        Int
  membershipId  String
  dateJoined    DateTime
  gymId         String
  user          User       @relation(fields: [userId], references: [id])
  membership    Membership @relation(fields: [membershipId], references: [id])
  gym           Gym        @relation(fields: [gymId], references: [id])
   @@id([userId, membershipId]) // Composite primary key
   @@unique([userId,gymId])
}

model Attendance {
  id String @id @default(uuid())
  gym Gym @relation(fields: [gymId],references: [id])
  gymId String
  users User @relation("UserAttendance",fields: [userId], references: [id])
  userId Int
  date String
  time String
  
   @@index([userId])
  @@index([gymId])
  @@index([date])
  @@index([time])
}

enum Roles {
  USER
  ADMIN
}
enum Providers {
google
credentials
}